/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.view;

import com.mycompany.model.Arma;
import com.mycompany.model.Lanzador;
import com.mycompany.model.Proyectil;
import com.mycompany.model.Rifle;
import com.mycompany.servicio.ServicioArma;
import com.mycompany.servicio.ServicioProyectiles;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan David
 */
public class GUIEliminarProyectil extends javax.swing.JFrame {

    private ServicioProyectiles servicioProyectiles;
    private ServicioArma servicioArma;
    private Proyectil proyectilEliminar;

    public GUIEliminarProyectil(ServicioProyectiles servicioProyectiles, ServicioArma servicioArma) {
        this.servicioProyectiles = servicioProyectiles;
        this.servicioArma = servicioArma;
        this.proyectilEliminar = null;
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConsultar = new javax.swing.JLabel();
        tfConsultar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListar = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar Proyectil");

        lblConsultar.setText("Consultar (Ingrese el nombre del proyectil)");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tbListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Tipo", "Velocidad", "Radio de explosión"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbListar.getTableHeader().setResizingAllowed(false);
        tbListar.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbListar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfConsultar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConsultar)
                            .addComponent(btnBuscar)
                            .addComponent(btnEliminar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (tfConsultar.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe poner un nombre para buscar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String nombre = tfConsultar.getText().trim();

        proyectilEliminar = buscarProyectil(nombre);
        if (proyectilEliminar == null) {
            JOptionPane.showMessageDialog(this, "El proyectil no existe", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        tbListar.setValueAt(proyectilEliminar.getTipo(), 0, 0);
        tbListar.setValueAt(proyectilEliminar.getVelocidad(), 0, 1);
        tbListar.setValueAt(proyectilEliminar.getRadoExplosion(), 0, 2);

    }//GEN-LAST:event_btnBuscarActionPerformed

    public Proyectil buscarProyectil(String tipo) {
        List<Proyectil> lista = servicioProyectiles.getProyectiles();
        for (Proyectil pro : lista) {
            if (pro.getTipo().equals(tipo)) {
                return pro;
            }
        }
        return null;
    }

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int iProyectil = tbListar.getSelectedRow();
        if (iProyectil == -1) {
            JOptionPane.showMessageDialog(this, "No selecciono nigún proyectil", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String tipo = (String) tbListar.getValueAt(iProyectil, 0);

        if (proyectilEliminar.getTipo().equals(tipo)) {
            List<Lanzador> listaLanzadores = servicioArma.getArmas()
                    .stream()
                    .filter(Lanzador.class::isInstance)
                    .map(Lanzador.class::cast)
                    .filter(lanzador -> lanzador.getProyectil().equals(proyectilEliminar))
                    .collect(Collectors.toList());
            if (listaLanzadores.isEmpty()) {
                int rEliminacionSencilla = JOptionPane.showConfirmDialog(
                        this,
                        "¿Desea continuar con la eliminación?",
                        "Confirmación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (rEliminacionSencilla == JOptionPane.YES_OPTION) {
                    servicioProyectiles.eliminarProyectil(proyectilEliminar);
                } else {
                    return;
                }
            } else {
                int rEliminacionConLanzadores = JOptionPane.showConfirmDialog(
                        this,
                        "Si elimina el proyectil: " + proyectilEliminar.getTipo()
                        + "\n Estaría eliminando los siguientes lanzadores asociados con este proyectil: "
                        + "\n" + listaLanzadores
                        + "\n¿Aun así desea continuar con la eliminación?",
                        "Confirmación",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (rEliminacionConLanzadores == JOptionPane.YES_OPTION) {
                    for (Lanzador l : listaLanzadores) {
                        servicioArma.eliminarArma(l);
                    }
                    servicioProyectiles.eliminarProyectil(proyectilEliminar);
                } else {
                    return;
                }
            }
        } else {
            System.out.println("No se encontro correctamente el proyectil a eliminar");
            return;
        }
        JOptionPane.showMessageDialog(this, "Se elimino el proyectil correctamente", "Exito", JOptionPane.INFORMATION_MESSAGE);
        proyectilEliminar = null;
        resetearForm();
    }//GEN-LAST:event_btnEliminarActionPerformed

    public void resetearForm() {
        tfConsultar.setText(null);
        tbListar.setValueAt(null, 0, 0);
        tbListar.setValueAt(null, 0, 1);
        tbListar.setValueAt(null, 0, 2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConsultar;
    private javax.swing.JTable tbListar;
    private javax.swing.JTextField tfConsultar;
    // End of variables declaration//GEN-END:variables
}
